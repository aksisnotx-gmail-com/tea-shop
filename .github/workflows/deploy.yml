# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: 部署运行

#推送事件触发
on:
  push:
    branches:
      - main

jobs:
  server-build:
    name: 后端构建

    # 权限
    permissions:
      contents: read
      packages: write

    # 选择系统运行
    runs-on: ubuntu-latest
    #步骤运行命令
    steps:
      - name: 拉取仓库 # -name让github知道这个步骤的名字
        # 必须使用这个命令才行
        uses: actions/checkout@v4

      - name: 下载JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle' # 发布版本
          java-version: '17'

      - name: Maven构建JAR包
        run:  |
          cd ${{ github.workspace }}
          mvn -B package -DskipTests --file ./back-end/pom.xml

      - name: 查看JAR包大小
        run: |
          du -sh ${{ github.workspace }}/back-end/application/target/application-1.0.0.jar
          du -sh ${{ github.workspace }}/back-end/application/target

      - name: 把JAR包复制到服务器
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PWD }}
          source: ${{ github.workspace }}/back-end/application/target/application-1.0.0.jar
          target: /home/servers/tea-shop/test

#      - name: 把JAR包推送到目标服务器
#        uses: garygrossgarten/github-action-scp@release
#        with:
#          local: ${{ github.workspace }}/back-end/application/target
#          remote: /home/servers/tea-shop/test   #复制到目标服务器
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USER }}
#          password: ${{ secrets.SSH_PWD }}
#          atomicPut: 'true'

#      - name: 执行服务端脚本
#        uses: garygrossgarten/github-action-ssh@release
#        with:
#          command: /bin/sh /home/servers/tea-shop/deploy.sh ${{secrets.MPW_KEY}}
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USER }}
#          password: ${{ secrets.SSH_PWD }}

